/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    java
    application
    // Use the shadow plugin to create a fat JAR, similar to maven-assembly-plugin
    id("com.github.johnrengelman.shadow") version "8.1.1"
}

repositories {
    mavenCentral()
}

// Define versions in a central place to match pom.xml
val kafkaVersion = "3.9.1"
val solaceJcsmpVersion = "10.27.2"
val slf4jVersion = "2.0.16"
val log4j2Version = "2.23.0"
val guavaVersion = "33.4.7-jre"
val lombokVersion = "1.18.36"
val junitJupiterVersion = "5.10.2"

dependencies {
    implementation("org.apache.kafka:kafka-clients:$kafkaVersion")
    implementation("com.solacesystems:sol-jcsmp:$solaceJcsmpVersion")
    implementation("com.google.guava:guava:$guavaVersion")

    implementation("org.slf4j:slf4j-api:$slf4jVersion")
    implementation("org.apache.logging.log4j:log4j-core:$log4j2Version")
    implementation("org.apache.logging.log4j:log4j-slf4j2-impl:$log4j2Version")

    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion")
}

group = "com.solace.kafkawireline"
version = "1.2"
description = "Kafka Wireline Proxy for Solace Platform"
java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}

application {
    mainClass.set("com.solace.kafka.kafkaproxy.ProxyMain")
}

tasks.test {
    useJUnitPlatform()
}

// Configure the shadowJar task to create the fat JAR
tasks.shadowJar {
    archiveBaseName.set(project.name)
    archiveClassifier.set("jar-with-dependencies")
    archiveVersion.set(project.version.toString())
    manifest {
        attributes(
            "Main-Class" to "com.solace.kafka.kafkaproxy.ProxyMain"
        )
    }
    mergeServiceFiles()
}

// Make the default 'build' task depend on shadowJar
tasks.build {
    dependsOn(tasks.shadowJar)
}

// The 'application' plugin's distribution is not needed if we are creating a fat JAR.
tasks.distZip.enabled = false
tasks.distTar.enabled = false
tasks.startScripts.enabled = false
