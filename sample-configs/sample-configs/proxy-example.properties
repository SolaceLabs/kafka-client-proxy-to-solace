## KAFKA CLIENT LISTENERS
#########################

# Kafka client connection endpoints
listeners=PLAINTEXT://localhost:9092,SASL_SSL://localhost:9094

# External hostnames to advertise to clients (optional)
# advertised.listeners=PLAINTEXT://public.host.domain:9092,SASL_SSL://public.host.domain:9094

## SSL/TLS CONFIGURATION
########################

# Server certificate for Kafka client connections
ssl.keystore.location=/path/to/certs/keystore.pkcs12
ssl.keystore.password=serverpass
ssl.keystore.type=PKCS12
ssl.enabled.protocols=TLSv1.2,TLSv1.3

# Client certificate verification (mTLS)
# ssl.client.auth=none
# ssl.truststore.location=/path/to/truststore/trusted.jks
# ssl.truststore.password=trusted
# ssl.truststore.type=JKS

## SOLACE BROKER CONNECTION
###########################

# Solace broker connection
solace.host=tcps://mr-connection-cloudsvc123.messaging.solace.cloud:55443
solace.vpn_name=my_vpn_name

# Solace SSL settings
# solace.ssl.enabled.protocols=TLSv1.2
# solace.ssl.truststore.location=/path/to/truststore/trusted.jks
# solace.ssl.truststore.password=trusted
# solace.ssl.truststore.type=JKS
# solace.ssl.validate_certificate=true
# solace.ssl.validate_certificate_date=true

# Solace client certificate (mTLS)
# solace.ssl.keystore.location=/path/to/keystore/client.jks
# solace.ssl.keystore.password=clientpass
# solace.ssl.keystore.type=JKS

## PROXY SETTINGS
#################

# Topic name conversion (e.g., my_topic.name -> my/topic/name)
proxy.separators=_.

# Maximum message size in bytes
message.max.bytes=1048576

# Worker threads for consumer requests
proxy.request.handler.threads=32

# Virtual partitions per topic
proxy.partitions.per.topic=100

# Solace queue naming
proxy.queuename.qualifier=
proxy.queuename.is.topicname=false

# Compression for fetch responses
proxy.fetch.compression.type=none

# Flow control threshold
proxy.max.uncommitted.messages=1000

# Consumer fetch defaults
fetch.max.wait.ms=500
fetch.min.bytes=1
fetch.max.bytes=1048576

# Health check server
proxy.healthcheckserver.create=true
proxy.healthcheckserver.port=8080
